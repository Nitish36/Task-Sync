ScreenManager:
    Home:
    Workspace:
    NoteTaking:
    Task:

<Home>:
    name: "Home"
    md_bg_color: 0.678, 0.847, 0.902, 1  # Light blue background
    RelativeLayout:
        Image:
            source: "images/bluepink.jpg"  # Replace with your image file
            allow_stretch: True  # Allow the image to stretch to fill the screen
            keep_ratio: False  # Ensure it covers the entire area
            size_hint: 1, 1  # Cover the entire screen

    BoxLayout:
        orientation: "vertical"
        spacing: 10  # Adds spacing between elements
        padding: [20, 50, 20, 50]  # Adds padding (left, top, right, bottom)



        MDLabel:
            text: "TaskSync"
            halign: "center"
            font_style: "H3"

        Image:
            size_hint: None, None
            width: 100
            height: 100
            allow_stretch: True
            keep_ratio: True
            source: "images/icon.png"
            pos_hint: {"center_x": 0.5}

        Widget:  # Spacer to push button down
            size_hint_y: 0.5

        MDRaisedButton:
            text: "Get Started"
            pos_hint: {"center_x": 0.5}
            size_hint : None,None
            width: self.parent.width * 0.5
            height: root.height*0.08
            elevation: 0
            md_bg_normal: ''
            md_bg_color: (140/255,0/255,255/255)
            on_release:
                root.manager.current = "Workspace"
                root.manager.transition.direction = 'left'


<Workspace>:
    name: "Workspace"
    md_bg_color: 0.678, 0.847, 0.902, 1
    RelativeLayout:
        Image:
            source: "images/bluepink.jpg"  # Replace with your image file
            allow_stretch: True  # Allow the image to stretch to fill the screen
            keep_ratio: False  # Ensure it covers the entire area
            size_hint: 1, 1  # Cover the entire screen
    MDIconButton:
        icon: "arrow-left"
        pos_hint: {"center_y": 0.9}
        on_release:
            root.manager.current = "Home"
            root.manager.transition.direction = 'right'

    FloatLayout:
        MDLabel:
            text: "Workspace"
            halign: "center"
            size_hint_y: None  # Disable vertical resizing
            height: 1000  # Set height based on text content
            font_style: "H3"

    BoxLayout:
        orientation: "vertical"
        spacing: 5  # Adds spacing between elements
        padding: [20, 20, 20, 100]  # Adds padding (left, top, right, bottom)


        Widget:  # Spacer to push button down
            size_hint_y: 0.5

        MDRaisedButton:
            text: "Note Taking"
            pos_hint: {"center_x": 0.5}
            size_hint : None,None
            width: self.parent.width * 0.5
            height: root.height*0.08
            theme_text_color: "Custom"
            elevation: 0
            md_bg_normal: ''
            md_bg_color: (140/255,0/255,255/255)
            on_release:
                root.manager.current = "NoteTaking"
                root.manager.transition.direction = 'left'

        MDRaisedButton:
            text: "Task"
            pos_hint: {"center_x": 0.5}
            size_hint : None,None
            width: self.parent.width * 0.5
            height: root.height*0.08
            theme_text_color: "Custom"
            md_bg_normal: ''
            md_bg_color: (140/255,0/255,255/255)
            elevation: 0
            on_release:
                root.manager.current = "Task"
                root.manager.transition.direction = 'left'


<NoteTaking>:
    name: "NoteTaking"
    on_enter: app.on_note_start()
    md_bg_color: 0.678, 0.847, 0.902, 1
    RelativeLayout:
        Image:
            source: "images/bluepink.jpg"  # Replace with your image file
            allow_stretch: True  # Allow the image to stretch to fill the screen
            keep_ratio: False  # Ensure it covers the entire area
            size_hint: 1, 1  # Cover the entire screen
    MDIconButton:
        icon: "arrow-left"
        pos_hint: {"center_y": 0.9}
        on_release:
            root.manager.current = "Workspace"
            root.manager.transition.direction = 'right'

    FloatLayout:
        MDLabel:
            text: "Make a Note"
            halign: "center"
            size_hint_y: None  # Disable vertical resizing
            height: 1000  # Set height based on text content
            font_style: "H3"

        ScrollView:
            pos_hint: {'center_y': .4, 'center_x': .5}
            size_hint: .9, .8

            MDList:
                id: container  # This is the container where tasks will be dynamically added

        MDIconButton:
            icon: "plus-circle"
            pos_hint: {"center_x":.5,"center_y":.1}
            icon_size: "64sp"
            on_release: app.show_note_dialog()



<Task>:
    name: "Task"
    md_bg_color: 0.678, 0.847, 0.902, 1
    RelativeLayout:
        Image:
            source: "images/bluepink.jpg"  # Replace with your image file
            allow_stretch: True  # Allow the image to stretch to fill the screen
            keep_ratio: False  # Ensure it covers the entire area
            size_hint: 1, 1  # Cover the entire screen
    MDIconButton:
        icon: "arrow-left"
        pos_hint: {"center_y": 0.9}
        on_release:
            root.manager.current = "Workspace"
            root.manager.transition.direction = 'right'

    FloatLayout:
        MDLabel:
            text: "Today's Tasks"
            halign: "center"
            size_hint_y: None  # Disable vertical resizing
            height: 1000  # Set height based on text content
            font_style: "H3"

        ScrollView:
            pos_hint: {'center_y': .4, 'center_x': .5}
            size_hint: .9, .8

            MDList:
                id: container  # This is the container where tasks will be dynamically added

        MDIconButton:
            icon: "plus-circle"
            pos_hint: {"center_x":.5,"center_y":.1}
            icon_size: "64sp"
            on_release: app.show_task_dialog()


<DialogContent>:
    orientation: "vertical"
    spacing: "18dp"
    size_hint: 1,None
    height: "130dp"

    GridLayout:
        rows: 1

        MDTextField:
            id: task_text
            hint_text: "Add Task.."
            pos_hint: {"center_y":0.4}
            max_text_length:50
            on_text_validate:(app.add_task(task_text,date_text.text),app.close_dialog())

        MDIconButton:
            icon: "calendar"
            on_release: root.show_date_picker()
            padding: "10dp"

    MDLabel:
        spacing: "10dp"
        id: date_text

    BoxLayout:
        orientation: "horizontal"

        MDRaisedButton:
            text: "Save"
            on_release: (app.add_task(task_text,date_text.text),app.close_dialog())


        MDFlatButton:
            text: "Cancel"
            on_release: app.close_dialog()

<NoteDialogContent>:
    orientation: "vertical"
    spacing: "18dp"
    size_hint: 1,None
    height: "130dp"

    GridLayout:
        rows: 1

        MDTextField:
            id: note_text
            hint_text: "Add Note.."
            pos_hint: {"center_y":0.4}
            max_text_length:25000
            on_text_validate:(app.add_note(note_text,date_text.text),app.close_note_dialog())

        MDIconButton:
            icon: "calendar"
            on_release: root.show_date_picker()
            padding: "10dp"

    MDLabel:
        spacing: "10dp"
        id: date_text

    BoxLayout:
        orientation: "horizontal"

        MDRaisedButton:
            text: "Save"
            on_release: (app.add_note(note_text,date_text.text),app.close_note_dialog())


        MDFlatButton:
            text: "Cancel"
            on_release: app.close_note_dialog()

<ListItemWithCheckbox>
    id: the_list_item
    markup: True

    LeftCheckbox:
        id:check
        on_release:
            root.mark(check,the_list_item)

    IconRightWidget:
        icon: 'trash-can-outline'
        theme_text_color:"Custom"
        text_color:1,0,0,1
        on_release:
            root.delete_item(the_list_item)

<ListItemWithCheckboxNote>
    id: the_note_item
    markup: True


    IconRightWidget:
        icon: 'trash-can-outline'
        theme_text_color:"Custom"
        text_color:1,0,0,1
        on_release:
            root.delete_note(the_note_item)